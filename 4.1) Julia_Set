import numpy as np
import matplotlib.pyplot as plt

def julia_set(width, height, c_real, c_imag, xmin=-1.5, xmax=1.5, ymin=-1.5, ymax=1.5, max_iter=256):
    x, y = np.meshgrid(np.linspace(xmin, xmax, width), np.linspace(ymin, ymax, height))
    z = x + 1j * y
    julia = np.zeros(z.shape, dtype=int)

    for i in range(max_iter):
        z = z**2 + (c_real + c_imag * 1j)
        mask = np.abs(z) < 1000
        julia += mask
        if not mask.any():
            break

    return julia

def plot_julia(width, height, c_real, c_imag, xmin=-1.5, xmax=1.5, ymin=-1.5, ymax=1.5, max_iter=256):
    julia = julia_set(width, height, c_real, c_imag, xmin, xmax, ymin, ymax, max_iter)
    plt.imshow(julia.T, extent=(xmin, xmax, ymin, ymax), cmap='hot', origin='lower')
    plt.title(f"Julia Set with c = {c_real} + {c_imag}i")
    plt.xlabel("Real")
    plt.ylabel("Imaginary")
    plt.colorbar(label='Iterations to escape')
    plt.show()

if __name__ == "__main__":
    width, height = 1000, 1000
    c_real, c_imag = -0.8, 0.156
    plot_julia(width, height, c_real, c_imag)
