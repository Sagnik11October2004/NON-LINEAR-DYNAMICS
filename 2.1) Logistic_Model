import numpy as np
import matplotlib.pyplot as plt

# Logistic map function
def logistic_map(r, x):
    return r * x * (1 - x)

# Function to generate bifurcation diagram
def bifurcation_diagram(r_values, x0=0.5, num_iterations=1000, num_transient=100):
    results = []
    for r in r_values:
        x = x0
        for _ in range(num_transient):
            x = logistic_map(r, x)
        for _ in range(num_iterations):
            x = logistic_map(r, x)
            results.append((r, x))
    return np.array(results)

# Set up parameters
r_values = np.linspace(2.5, 4.0, 1000)
x0 = 0.5
num_iterations = 5000
num_transient = 100

# Generate bifurcation diagram
bifurcation_data = bifurcation_diagram(r_values, x0, num_iterations, num_transient)

# Plot bifurcation diagram
plt.figure(figsize=(10, 6))
plt.scatter(bifurcation_data[:, 0], bifurcation_data[:, 1], s=0.1, c='blue')
plt.xlabel('r')
plt.ylabel('x')
plt.title('Bifurcation Diagram of Logistic Map')
plt.show()
