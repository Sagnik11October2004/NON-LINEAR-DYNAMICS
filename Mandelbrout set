import numpy as np
import matplotlib.pyplot as plt

def mandelbrot(c, max_iter):
    z = 0
    n = 0
    while abs(z) <= 2 and n < max_iter:
        z = z*z + c
        n += 1
    return n

def mandelbrot_set(width, height, x_min, x_max, y_min, y_max, max_iter):
    image = np.zeros((width, height))
    for x in range(width):
        for y in range(height):
            real = x * (x_max - x_min) / (width - 1) + x_min
            imag = y * (y_max - y_min) / (height - 1) + y_min
            c = complex(real, imag)
            color = mandelbrot(c, max_iter)
            image[x, y] = color
    return image

def plot_mandelbrot(image):
    plt.imshow(image.T, cmap='hot', extent=[-2, 2, -2, 2])
    plt.colorbar(label='Iterations')
    plt.xlabel('Re')
    plt.ylabel('Im')
    plt.title('Mandelbrot Set')
    plt.show()

# Parameters
width = 800
height = 800
x_min = -2
x_max = 2
y_min = -2
y_max = 2
max_iter = 1000

# Generate Mandelbrot set
mandelbrot_image = mandelbrot_set(width, height, x_min, x_max, y_min, y_max, max_iter)

# Plot Mandelbrot set
plot_mandelbrot(mandelbrot_image)
