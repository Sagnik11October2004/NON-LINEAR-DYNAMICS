import matplotlib.pyplot as plt
import numpy as np

def pythagoras_tree(ax, x, y, length, angle, depth):
    if depth == 0:
        return

    x_new = x + length * np.cos(np.radians(angle))
    y_new = y + length * np.sin(np.radians(angle))

    ax.plot([x, x_new], [y, y_new], color='brown')

    x_right = x_new + length * np.cos(np.radians(angle + 45))
    y_right = y_new + length * np.sin(np.radians(angle + 45))
    ax.plot([x_new, x_right], [y_new, y_right], color='green')

    x_left = x_new + length * np.cos(np.radians(angle - 45))
    y_left = y_new + length * np.sin(np.radians(angle - 45))
    ax.plot([x_new, x_left], [y_new, y_left], color='green')

    pythagoras_tree(ax, x_right, y_right, length * np.sqrt(2) / 2, angle + 45, depth - 1)
    pythagoras_tree(ax, x_left, y_left, length * np.sqrt(2) / 2, angle - 45, depth - 1)

def main():
    depth = int(input("Enter the depth of the Pythagoras tree: "))
    length = int(input("Enter the length of the trunk: "))

    fig, ax = plt.subplots()
    ax.set_aspect('equal')
    ax.axis('off')

    pythagoras_tree(ax, 0, 0, length, 90, depth)

    plt.title('Pythagoras Tree Fractal')
    plt.show()

if __name__ == "__main__":
    main()
